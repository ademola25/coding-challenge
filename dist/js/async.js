!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports):"function"==typeof define&&define.amd?define(["exports"],factory):factory(global.async={})}(this,function(exports){"use strict";function apply(fn,...args){return(...callArgs)=>fn(...args,...callArgs)}function initialParams(fn){return function(...args){var callback=args.pop();return fn.call(this,args,callback)}}var hasSetImmediate="function"==typeof setImmediate&&setImmediate,hasNextTick="object"==typeof process&&"function"==typeof process.nextTick;function fallback(fn){setTimeout(fn,0)}function wrap(defer){return(fn,...args)=>defer(()=>fn(...args))}var setImmediate$1=wrap(hasSetImmediate?setImmediate:hasNextTick?process.nextTick:fallback);function asyncify(func){return isAsync(func)?function(...args){const callback=args.pop();return handlePromise(func.apply(this,args),callback)}:initialParams(function(args,callback){var result;try{result=func.apply(this,args)}catch(e){return callback(e)}if(result&&"function"==typeof result.then)return handlePromise(result,callback);callback(null,result)})}function handlePromise(promise,callback){return promise.then(value=>{invokeCallback(callback,null,value)},err=>{invokeCallback(callback,err&&err.message?err:new Error(err))})}function invokeCallback(callback,error,value){try{callback(error,value)}catch(err){setImmediate$1(e=>{throw e},err)}}function isAsync(fn){return"AsyncFunction"===fn[Symbol.toStringTag]}function wrapAsync(asyncFn){if("function"!=typeof asyncFn)throw new Error("expected a function");return isAsync(asyncFn)?asyncify(asyncFn):asyncFn}function applyEach(eachfn){return function(fns,...callArgs){var go=initialParams(function(args,callback){var that=this;return eachfn(fns,(fn,cb)=>{wrapAsync(fn).apply(that,args.concat(cb))},callback)});return callArgs.length?go.apply(this,callArgs):go}}function _asyncMap(eachfn,arr,iteratee,callback){arr=arr||[];var results=[],counter=0,_iteratee=wrapAsync(iteratee);return eachfn(arr,(value,_,iterCb)=>{var index=counter++;_iteratee(value,(err,v)=>{results[index]=v,iterCb(err)})},err=>{callback(err,results)})}function isArrayLike(value){return value&&"number"==typeof value.length&&value.length>=0&&value.length%1==0}const breakLoop={};function once(fn){function wrapper(...args){if(null!==fn){var callFn=fn;fn=null,callFn.apply(this,args)}}return Object.assign(wrapper,fn),wrapper}function createIterator(coll){if(isArrayLike(coll))return function(coll){var i=-1,len=coll.length;return function(){return++i<len?{value:coll[i],key:i}:null}}(coll);var obj,okeys,i,len,iterator=function(coll){return coll[Symbol.iterator]&&coll[Symbol.iterator]()}(coll);return iterator?function(iterator){var i=-1;return function(){var item=iterator.next();return item.done?null:(i++,{value:item.value,key:i})}}(iterator):(okeys=(obj=coll)?Object.keys(obj):[],i=-1,len=okeys.length,function(){var key=okeys[++i];return i<len?{value:obj[key],key}:null})}function onlyOnce(fn){return function(...args){if(null===fn)throw new Error("Callback was already called.");var callFn=fn;fn=null,callFn.apply(this,args)}}function asyncEachOfLimit(generator,limit,iteratee,callback){let done=!1,canceled=!1,awaiting=!1,running=0,idx=0;function replenish(){running>=limit||awaiting||done||(awaiting=!0,generator.next().then(({value,done:iterDone})=>{if(!canceled&&!done){if(awaiting=!1,iterDone)return done=!0,void(running<=0&&callback(null));running++,iteratee(value,idx,iterateeCallback),idx++,replenish()}}).catch(handleError))}function iterateeCallback(err,result){if(running-=1,!canceled)return err?handleError(err):!1===err?(done=!0,void(canceled=!0)):result===breakLoop||done&&running<=0?(done=!0,callback(null)):void replenish()}function handleError(err){canceled||(awaiting=!1,done=!0,callback(err))}replenish()}var eachOfLimit=limit=>(obj,iteratee,callback)=>{if(callback=once(callback),limit<=0)throw new RangeError("concurrency limit cannot be less than 1");if(!obj)return callback(null);if("AsyncGenerator"===obj[Symbol.toStringTag])return asyncEachOfLimit(obj,limit,iteratee,callback);if("function"==typeof obj[Symbol.asyncIterator])return asyncEachOfLimit(obj[Symbol.asyncIterator](),limit,iteratee,callback);var nextElem=createIterator(obj),done=!1,canceled=!1,running=0,looping=!1;function iterateeCallback(err,value){if(!canceled)if(running-=1,err)done=!0,callback(err);else if(!1===err)done=!0,canceled=!0;else{if(value===breakLoop||done&&running<=0)return done=!0,callback(null);looping||replenish()}}function replenish(){for(looping=!0;running<limit&&!done;){var elem=nextElem();if(null===elem)return done=!0,void(running<=0&&callback(null));running+=1,iteratee(elem.value,elem.key,onlyOnce(iterateeCallback))}looping=!1}replenish()};function awaitify(asyncFn,arity=asyncFn.length){if(!arity)throw new Error("arity is undefined");function awaitable(...args){return"function"==typeof args[arity-1]?asyncFn.apply(this,args):new Promise((resolve,reject)=>{args[arity-1]=((err,...cbArgs)=>{if(err)return reject(err);resolve(cbArgs.length>1?cbArgs:cbArgs[0])}),asyncFn.apply(this,args)})}return Object.defineProperty(awaitable,"name",{value:`awaitable(${asyncFn.name})`}),awaitable}var eachOfLimit$2=awaitify(function(coll,limit,iteratee,callback){return eachOfLimit(limit)(coll,wrapAsync(iteratee),callback)},4);function eachOfArrayLike(coll,iteratee,callback){callback=once(callback);var index=0,completed=0,{length}=coll,canceled=!1;function iteratorCallback(err,value){!1===err&&(canceled=!0),!0!==canceled&&(err?callback(err):++completed!==length&&value!==breakLoop||callback(null))}for(0===length&&callback(null);index<length;index++)iteratee(coll[index],index,onlyOnce(iteratorCallback))}function eachOfGeneric(coll,iteratee,callback){return eachOfLimit$2(coll,1/0,iteratee,callback)}var eachOf$1=awaitify(function(coll,iteratee,callback){return(isArrayLike(coll)?eachOfArrayLike:eachOfGeneric)(coll,wrapAsync(iteratee),callback)},3);var map$1=awaitify(function(coll,iteratee,callback){return _asyncMap(eachOf$1,coll,iteratee,callback)},3),applyEach$1=applyEach(map$1);var eachOfSeries$1=awaitify(function(coll,iteratee,callback){return eachOfLimit$2(coll,1,iteratee,callback)},3);var mapSeries$1=awaitify(function(coll,iteratee,callback){return _asyncMap(eachOfSeries$1,coll,iteratee,callback)},3),applyEachSeries=applyEach(mapSeries$1);const PROMISE_SYMBOL=Symbol("promiseCallback");function promiseCallback(){let resolve,reject;function callback(err,...args){if(err)return reject(err);resolve(args.length>1?args:args[0])}return callback[PROMISE_SYMBOL]=new Promise((res,rej)=>{resolve=res,reject=rej}),callback}function auto(tasks,concurrency,callback){"number"!=typeof concurrency&&(callback=concurrency,concurrency=null),callback=once(callback||promiseCallback());var numTasks=Object.keys(tasks).length;if(!numTasks)return callback(null);concurrency||(concurrency=numTasks);var results={},runningTasks=0,canceled=!1,hasError=!1,listeners=Object.create(null),readyTasks=[],readyToCheck=[],uncheckedDependencies={};function enqueueTask(key,task){readyTasks.push(()=>(function(key,task){if(hasError)return;var taskCallback=onlyOnce((err,...result)=>{if(runningTasks--,!1!==err)if(result.length<2&&([result]=result),err){var safeResults={};if(Object.keys(results).forEach(rkey=>{safeResults[rkey]=results[rkey]}),safeResults[key]=result,hasError=!0,listeners=Object.create(null),canceled)return;callback(err,safeResults)}else results[key]=result,(listeners[key]||[]).forEach(fn=>fn()),processQueue();else canceled=!0});runningTasks++;var taskFn=wrapAsync(task[task.length-1]);task.length>1?taskFn(results,taskCallback):taskFn(taskCallback)})(key,task))}function processQueue(){if(!canceled){if(0===readyTasks.length&&0===runningTasks)return callback(null,results);for(;readyTasks.length&&runningTasks<concurrency;){readyTasks.shift()()}}}function getDependents(taskName){var result=[];return Object.keys(tasks).forEach(key=>{const task=tasks[key];Array.isArray(task)&&task.indexOf(taskName)>=0&&result.push(key)}),result}return Object.keys(tasks).forEach(key=>{var task=tasks[key];if(!Array.isArray(task))return enqueueTask(key,[task]),void readyToCheck.push(key);var dependencies=task.slice(0,task.length-1),remainingDependencies=dependencies.length;if(0===remainingDependencies)return enqueueTask(key,task),void readyToCheck.push(key);uncheckedDependencies[key]=remainingDependencies,dependencies.forEach(dependencyName=>{if(!tasks[dependencyName])throw new Error("async.auto task `"+key+"` has a non-existent dependency `"+dependencyName+"` in "+dependencies.join(", "));!function(taskName,fn){var taskListeners=listeners[taskName];taskListeners||(taskListeners=listeners[taskName]=[]);taskListeners.push(fn)}(dependencyName,()=>{0===--remainingDependencies&&enqueueTask(key,task)})})}),function(){var currentTask,counter=0;for(;readyToCheck.length;)currentTask=readyToCheck.pop(),counter++,getDependents(currentTask).forEach(dependent=>{0==--uncheckedDependencies[dependent]&&readyToCheck.push(dependent)});if(counter!==numTasks)throw new Error("async.auto cannot execute tasks due to a recursive dependency")}(),processQueue(),callback[PROMISE_SYMBOL]}var FN_ARGS=/^(?:async\s+)?(?:function)?\s*[^(]*\(\s*([^)]+)\s*\)(?:\s*{)/m,ARROW_FN_ARGS=/^(?:async\s+)?\(?\s*([^)^=]+)\s*\)?(?:\s*=>)/m,FN_ARG_SPLIT=/,/,FN_ARG=/(=.+)?(\s*)$/,STRIP_COMMENTS=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm;function autoInject(tasks,callback){var newTasks={};return Object.keys(tasks).forEach(key=>{var params,taskFn=tasks[key],fnIsAsync=isAsync(taskFn),hasNoDeps=!fnIsAsync&&1===taskFn.length||fnIsAsync&&0===taskFn.length;if(Array.isArray(taskFn))params=[...taskFn],taskFn=params.pop(),newTasks[key]=params.concat(params.length>0?newTask:taskFn);else if(hasNoDeps)newTasks[key]=taskFn;else{if(params=function(func){const src=func.toString().replace(STRIP_COMMENTS,"");let match=src.match(FN_ARGS);if(match||(match=src.match(ARROW_FN_ARGS)),!match)throw new Error("could not parse args in autoInject\nSource:\n"+src);let[,args]=match;return args.replace(/\s/g,"").split(FN_ARG_SPLIT).map(arg=>arg.replace(FN_ARG,"").trim())}(taskFn),0===taskFn.length&&!fnIsAsync&&0===params.length)throw new Error("autoInject task functions require explicit parameters.");fnIsAsync||params.pop(),newTasks[key]=params.concat(newTask)}function newTask(results,taskCb){var newArgs=params.map(name=>results[name]);newArgs.push(taskCb),wrapAsync(taskFn)(...newArgs)}}),auto(newTasks,callback)}class DLL{constructor(){this.head=this.tail=null,this.length=0}removeLink(node){return node.prev?node.prev.next=node.next:this.head=node.next,node.next?node.next.prev=node.prev:this.tail=node.prev,node.prev=node.next=null,this.length-=1,node}empty(){for(;this.head;)this.shift();return this}insertAfter(node,newNode){newNode.prev=node,newNode.next=node.next,node.next?node.next.prev=newNode:this.tail=newNode,node.next=newNode,this.length+=1}insertBefore(node,newNode){newNode.prev=node.prev,newNode.next=node,node.prev?node.prev.next=newNode:this.head=newNode,node.prev=newNode,this.length+=1}unshift(node){this.head?this.insertBefore(this.head,node):setInitial(this,node)}push(node){this.tail?this.insertAfter(this.tail,node):setInitial(this,node)}shift(){return this.head&&this.removeLink(this.head)}pop(){return this.tail&&this.removeLink(this.tail)}toArray(){return[...this]}*[Symbol.iterator](){for(var cur=this.head;cur;)yield cur.data,cur=cur.next}remove(testFn){for(var curr=this.head;curr;){var{next}=curr;testFn(curr)&&this.removeLink(curr),curr=next}return this}}function setInitial(dll,node){dll.length=1,dll.head=dll.tail=node}const noop=()=>{};function queue(worker,concurrency,payload){if(null==concurrency)concurrency=1;else if(0===concurrency)throw new RangeError("Concurrency must not be zero");var _worker=wrapAsync(worker),numRunning=0,workersList=[],processingScheduled=!1;function _insert(data,insertAtFront,callback){if(null!=callback&&"function"!=typeof callback)throw new Error("task callback must be a function");if(q.started=!0,Array.isArray(data)||(data=[data]),0===data.length&&q.idle())return setImmediate$1(()=>q.drain());for(var i=0,l=data.length;i<l;i++){var item={data:data[i],callback:callback||noop};insertAtFront?q._tasks.unshift(item):q._tasks.push(item)}processingScheduled||(processingScheduled=!0,setImmediate$1(()=>{processingScheduled=!1,q.process()}))}function _next(tasks){return function(err,...args){numRunning-=1;for(var i=0,l=tasks.length;i<l;i++){var task=tasks[i],index=workersList.indexOf(task);0===index?workersList.shift():index>0&&workersList.splice(index,1),task.callback(err,...args),null!=err&&q.error(err,task.data)}numRunning<=q.concurrency-q.buffer&&q.unsaturated(),q.idle()&&q.drain(),q.process()}}var isProcessing=!1,q={_tasks:new DLL,*[Symbol.iterator](){yield*q._tasks[Symbol.iterator]()},concurrency,payload,saturated:noop,unsaturated:noop,buffer:concurrency/4,empty:noop,drain:noop,error:noop,started:!1,paused:!1,push(data,callback){_insert(data,!1,callback)},kill(){q.drain=noop,q._tasks.empty()},unshift(data,callback){_insert(data,!0,callback)},remove(testFn){q._tasks.remove(testFn)},process(){if(!isProcessing){for(isProcessing=!0;!q.paused&&numRunning<q.concurrency&&q._tasks.length;){var tasks=[],data=[],l=q._tasks.length;q.payload&&(l=Math.min(l,q.payload));for(var i=0;i<l;i++){var node=q._tasks.shift();tasks.push(node),workersList.push(node),data.push(node.data)}numRunning+=1,0===q._tasks.length&&q.empty(),numRunning===q.concurrency&&q.saturated();var cb=onlyOnce(_next(tasks));_worker(data,cb)}isProcessing=!1}},length:()=>q._tasks.length,running:()=>numRunning,workersList:()=>workersList,idle:()=>q._tasks.length+numRunning===0,pause(){q.paused=!0},resume(){!1!==q.paused&&(q.paused=!1,setImmediate$1(q.process))}};return q}function cargo(worker,payload){return queue(worker,1,payload)}function cargo$1(worker,concurrency,payload){return queue(worker,concurrency,payload)}var reduce$1=awaitify(function(coll,memo,iteratee,callback){callback=once(callback);var _iteratee=wrapAsync(iteratee);return eachOfSeries$1(coll,(x,i,iterCb)=>{_iteratee(memo,x,(err,v)=>{memo=v,iterCb(err)})},err=>callback(err,memo))},4);function seq(...functions){var _functions=functions.map(wrapAsync);return function(...args){var that=this,cb=args[args.length-1];return"function"==typeof cb?args.pop():cb=promiseCallback(),reduce$1(_functions,args,(newargs,fn,iterCb)=>{fn.apply(that,newargs.concat((err,...nextargs)=>{iterCb(err,nextargs)}))},(err,results)=>cb(err,...results)),cb[PROMISE_SYMBOL]}}function compose(...args){return seq(...args.reverse())}var mapLimit$1=awaitify(function(coll,limit,iteratee,callback){return _asyncMap(eachOfLimit(limit),coll,iteratee,callback)},4);var concatLimit$1=awaitify(function(coll,limit,iteratee,callback){var _iteratee=wrapAsync(iteratee);return mapLimit$1(coll,limit,(val,iterCb)=>{_iteratee(val,(err,...args)=>err?iterCb(err):iterCb(null,args))},(err,mapResults)=>{for(var result=[],i=0;i<mapResults.length;i++)mapResults[i]&&(result=result.concat(...mapResults[i]));return callback(err,result)})},4);var concat$1=awaitify(function(coll,iteratee,callback){return concatLimit$1(coll,1/0,iteratee,callback)},3);var concatSeries$1=awaitify(function(coll,iteratee,callback){return concatLimit$1(coll,1,iteratee,callback)},3);function constant(...args){return function(...ignoredArgs){return ignoredArgs.pop()(null,...args)}}function _createTester(check,getResult){return(eachfn,arr,_iteratee,cb)=>{var testResult,testPassed=!1;const iteratee=wrapAsync(_iteratee);eachfn(arr,(value,_,callback)=>{iteratee(value,(err,result)=>err?callback(err):check(result)&&!testResult?(testPassed=!0,testResult=getResult(!0,value),callback(null,breakLoop)):void callback())},err=>{if(err)return cb(err);cb(null,testPassed?testResult:getResult(!1))})}}var detect$1=awaitify(function(coll,iteratee,callback){return _createTester(bool=>bool,(res,item)=>item)(eachOf$1,coll,iteratee,callback)},3);var detectLimit$1=awaitify(function(coll,limit,iteratee,callback){return _createTester(bool=>bool,(res,item)=>item)(eachOfLimit(limit),coll,iteratee,callback)},4);var detectSeries$1=awaitify(function(coll,iteratee,callback){return _createTester(bool=>bool,(res,item)=>item)(eachOfLimit(1),coll,iteratee,callback)},3);function consoleFunc(name){return(fn,...args)=>wrapAsync(fn)(...args,(err,...resultArgs)=>{"object"==typeof console&&(err?console.error&&console.error(err):console[name]&&resultArgs.forEach(x=>console[name](x)))})}var dir=consoleFunc("dir");var doWhilst$1=awaitify(function(iteratee,test,callback){callback=onlyOnce(callback);var results,_fn=wrapAsync(iteratee),_test=wrapAsync(test);function next(err,...args){if(err)return callback(err);!1!==err&&(results=args,_test(...args,check))}function check(err,truth){return err?callback(err):!1!==err?truth?void _fn(next):callback(null,...results):void 0}return check(null,!0)},3);function doUntil(iteratee,test,callback){const _test=wrapAsync(test);return doWhilst$1(iteratee,(...args)=>{const cb=args.pop();_test(...args,(err,truth)=>cb(err,!truth))},callback)}function _withoutIndex(iteratee){return(value,index,callback)=>iteratee(value,callback)}var each=awaitify(function(coll,iteratee,callback){return eachOf$1(coll,_withoutIndex(wrapAsync(iteratee)),callback)},3);var eachLimit$2=awaitify(function(coll,limit,iteratee,callback){return eachOfLimit(limit)(coll,_withoutIndex(wrapAsync(iteratee)),callback)},4);var eachSeries$1=awaitify(function(coll,iteratee,callback){return eachLimit$2(coll,1,iteratee,callback)},3);function ensureAsync(fn){return isAsync(fn)?fn:function(...args){var callback=args.pop(),sync=!0;args.push((...innerArgs)=>{sync?setImmediate$1(()=>callback(...innerArgs)):callback(...innerArgs)}),fn.apply(this,args),sync=!1}}var every$1=awaitify(function(coll,iteratee,callback){return _createTester(bool=>!bool,res=>!res)(eachOf$1,coll,iteratee,callback)},3);var everyLimit$1=awaitify(function(coll,limit,iteratee,callback){return _createTester(bool=>!bool,res=>!res)(eachOfLimit(limit),coll,iteratee,callback)},4);var everySeries$1=awaitify(function(coll,iteratee,callback){return _createTester(bool=>!bool,res=>!res)(eachOfSeries$1,coll,iteratee,callback)},3);function filterArray(eachfn,arr,iteratee,callback){var truthValues=new Array(arr.length);eachfn(arr,(x,index,iterCb)=>{iteratee(x,(err,v)=>{truthValues[index]=!!v,iterCb(err)})},err=>{if(err)return callback(err);for(var results=[],i=0;i<arr.length;i++)truthValues[i]&&results.push(arr[i]);callback(null,results)})}function filterGeneric(eachfn,coll,iteratee,callback){var results=[];eachfn(coll,(x,index,iterCb)=>{iteratee(x,(err,v)=>{if(err)return iterCb(err);v&&results.push({index,value:x}),iterCb()})},err=>{if(err)return callback(err);callback(null,results.sort((a,b)=>a.index-b.index).map(v=>v.value))})}function _filter(eachfn,coll,iteratee,callback){return(isArrayLike(coll)?filterArray:filterGeneric)(eachfn,coll,wrapAsync(iteratee),callback)}var filter$1=awaitify(function(coll,iteratee,callback){return _filter(eachOf$1,coll,iteratee,callback)},3);var filterLimit$1=awaitify(function(coll,limit,iteratee,callback){return _filter(eachOfLimit(limit),coll,iteratee,callback)},4);var filterSeries$1=awaitify(function(coll,iteratee,callback){return _filter(eachOfSeries$1,coll,iteratee,callback)},3);var forever$1=awaitify(function(fn,errback){var done=onlyOnce(errback),task=wrapAsync(ensureAsync(fn));return function next(err){if(err)return done(err);!1!==err&&task(next)}()},2);var groupByLimit$1=awaitify(function(coll,limit,iteratee,callback){var _iteratee=wrapAsync(iteratee);return mapLimit$1(coll,limit,(val,iterCb)=>{_iteratee(val,(err,key)=>err?iterCb(err):iterCb(null,{key,val}))},(err,mapResults)=>{for(var result={},{hasOwnProperty}=Object.prototype,i=0;i<mapResults.length;i++)if(mapResults[i]){var{key}=mapResults[i],{val}=mapResults[i];hasOwnProperty.call(result,key)?result[key].push(val):result[key]=[val]}return callback(err,result)})},4);function groupBy(coll,iteratee,callback){return groupByLimit$1(coll,1/0,iteratee,callback)}function groupBySeries(coll,iteratee,callback){return groupByLimit$1(coll,1,iteratee,callback)}var log=consoleFunc("log");var mapValuesLimit$1=awaitify(function(obj,limit,iteratee,callback){callback=once(callback);var newObj={},_iteratee=wrapAsync(iteratee);return eachOfLimit(limit)(obj,(val,key,next)=>{_iteratee(val,key,(err,result)=>{if(err)return next(err);newObj[key]=result,next()})},err=>callback(err,newObj))},4);function mapValues(obj,iteratee,callback){return mapValuesLimit$1(obj,1/0,iteratee,callback)}function mapValuesSeries(obj,iteratee,callback){return mapValuesLimit$1(obj,1,iteratee,callback)}function memoize(fn,hasher=(v=>v)){var memo=Object.create(null),queues=Object.create(null),_fn=wrapAsync(fn),memoized=initialParams((args,callback)=>{var key=hasher(...args);key in memo?setImmediate$1(()=>callback(null,...memo[key])):key in queues?queues[key].push(callback):(queues[key]=[callback],_fn(...args,(err,...resultArgs)=>{err||(memo[key]=resultArgs);var q=queues[key];delete queues[key];for(var i=0,l=q.length;i<l;i++)q[i](err,...resultArgs)}))});return memoized.memo=memo,memoized.unmemoized=fn,memoized}var nextTick=wrap(hasNextTick?process.nextTick:hasSetImmediate?setImmediate:fallback),_parallel=awaitify((eachfn,tasks,callback)=>{var results=isArrayLike(tasks)?[]:{};eachfn(tasks,(task,key,taskCb)=>{wrapAsync(task)((err,...result)=>{result.length<2&&([result]=result),results[key]=result,taskCb(err)})},err=>callback(err,results))},3);function parallel(tasks,callback){return _parallel(eachOf$1,tasks,callback)}function parallelLimit(tasks,limit,callback){return _parallel(eachOfLimit(limit),tasks,callback)}function queue$1(worker,concurrency){var _worker=wrapAsync(worker);return queue((items,cb)=>{_worker(items[0],cb)},concurrency,1)}function priorityQueue(worker,concurrency){var q=queue$1(worker,concurrency);return q.push=function(data,priority=0,callback=(()=>{})){if("function"!=typeof callback)throw new Error("task callback must be a function");if(q.started=!0,Array.isArray(data)||(data=[data]),0===data.length)return setImmediate$1(()=>q.drain());for(var nextNode=q._tasks.head;nextNode&&priority>=nextNode.priority;)nextNode=nextNode.next;for(var i=0,l=data.length;i<l;i++){var item={data:data[i],priority,callback};nextNode?q._tasks.insertBefore(nextNode,item):q._tasks.push(item)}setImmediate$1(q.process)},delete q.unshift,q}var race$1=awaitify(function(tasks,callback){if(callback=once(callback),!Array.isArray(tasks))return callback(new TypeError("First argument to race must be an array of functions"));if(!tasks.length)return callback();for(var i=0,l=tasks.length;i<l;i++)wrapAsync(tasks[i])(callback)},2);function reduceRight(array,memo,iteratee,callback){var reversed=[...array].reverse();return reduce$1(reversed,memo,iteratee,callback)}function reflect(fn){var _fn=wrapAsync(fn);return initialParams(function(args,reflectCallback){return args.push((error,...cbArgs)=>{if(error)return reflectCallback(null,{error});var value=cbArgs;cbArgs.length<=1&&([value]=cbArgs),reflectCallback(null,{value})}),_fn.apply(this,args)})}function reflectAll(tasks){var results;return Array.isArray(tasks)?results=tasks.map(reflect):(results={},Object.keys(tasks).forEach(key=>{results[key]=reflect.call(this,tasks[key])})),results}function reject(eachfn,arr,_iteratee,callback){const iteratee=wrapAsync(_iteratee);return _filter(eachfn,arr,(value,cb)=>{iteratee(value,(err,v)=>{cb(err,!v)})},callback)}var reject$2=awaitify(function(coll,iteratee,callback){return reject(eachOf$1,coll,iteratee,callback)},3);var rejectLimit$1=awaitify(function(coll,limit,iteratee,callback){return reject(eachOfLimit(limit),coll,iteratee,callback)},4);var rejectSeries$1=awaitify(function(coll,iteratee,callback){return reject(eachOfSeries$1,coll,iteratee,callback)},3);function constant$1(value){return function(){return value}}const DEFAULT_TIMES=5,DEFAULT_INTERVAL=0;function retry(opts,task,callback){var options={times:DEFAULT_TIMES,intervalFunc:constant$1(DEFAULT_INTERVAL)};if(arguments.length<3&&"function"==typeof opts?(callback=task||promiseCallback(),task=opts):(!function(acc,t){if("object"==typeof t)acc.times=+t.times||DEFAULT_TIMES,acc.intervalFunc="function"==typeof t.interval?t.interval:constant$1(+t.interval||DEFAULT_INTERVAL),acc.errorFilter=t.errorFilter;else{if("number"!=typeof t&&"string"!=typeof t)throw new Error("Invalid arguments for async.retry");acc.times=+t||DEFAULT_TIMES}}(options,opts),callback=callback||promiseCallback()),"function"!=typeof task)throw new Error("Invalid arguments for async.retry");var _task=wrapAsync(task),attempt=1;return function retryAttempt(){_task((err,...args)=>{!1!==err&&(err&&attempt++<options.times&&("function"!=typeof options.errorFilter||options.errorFilter(err))?setTimeout(retryAttempt,options.intervalFunc(attempt)):callback(err,...args))})}(),callback[PROMISE_SYMBOL]}function retryable(opts,task){task||(task=opts,opts=null);let arity=opts&&opts.arity||task.length;isAsync(task)&&(arity+=1);var _task=wrapAsync(task);return initialParams((args,callback)=>{function taskFn(cb){_task(...args,cb)}return(args.length<arity-1||null==callback)&&(args.push(callback),callback=promiseCallback()),opts?retry(opts,taskFn,callback):retry(taskFn,callback),callback[PROMISE_SYMBOL]})}function series(tasks,callback){return _parallel(eachOfSeries$1,tasks,callback)}var some$1=awaitify(function(coll,iteratee,callback){return _createTester(Boolean,res=>res)(eachOf$1,coll,iteratee,callback)},3);var someLimit$1=awaitify(function(coll,limit,iteratee,callback){return _createTester(Boolean,res=>res)(eachOfLimit(limit),coll,iteratee,callback)},4);var someSeries$1=awaitify(function(coll,iteratee,callback){return _createTester(Boolean,res=>res)(eachOfSeries$1,coll,iteratee,callback)},3);var sortBy$1=awaitify(function(coll,iteratee,callback){var _iteratee=wrapAsync(iteratee);return map$1(coll,(x,iterCb)=>{_iteratee(x,(err,criteria)=>{if(err)return iterCb(err);iterCb(null,{value:x,criteria})})},(err,results)=>{if(err)return callback(err);callback(null,results.sort(comparator).map(v=>v.value))});function comparator(left,right){var a=left.criteria,b=right.criteria;return a<b?-1:a>b?1:0}},3);function timeout(asyncFn,milliseconds,info){var fn=wrapAsync(asyncFn);return initialParams((args,callback)=>{var timer,timedOut=!1;args.push((...cbArgs)=>{timedOut||(callback(...cbArgs),clearTimeout(timer))}),timer=setTimeout(function(){var name=asyncFn.name||"anonymous",error=new Error('Callback function "'+name+'" timed out.');error.code="ETIMEDOUT",info&&(error.info=info),timedOut=!0,callback(error)},milliseconds),fn(...args)})}function timesLimit(count,limit,iteratee,callback){var _iteratee=wrapAsync(iteratee);return mapLimit$1(function(size){for(var result=Array(size);size--;)result[size]=size;return result}(count),limit,_iteratee,callback)}function times(n,iteratee,callback){return timesLimit(n,1/0,iteratee,callback)}function timesSeries(n,iteratee,callback){return timesLimit(n,1,iteratee,callback)}function transform(coll,accumulator,iteratee,callback){arguments.length<=3&&"function"==typeof accumulator&&(callback=iteratee,iteratee=accumulator,accumulator=Array.isArray(coll)?[]:{}),callback=once(callback||promiseCallback());var _iteratee=wrapAsync(iteratee);return eachOf$1(coll,(v,k,cb)=>{_iteratee(accumulator,v,k,cb)},err=>callback(err,accumulator)),callback[PROMISE_SYMBOL]}var tryEach$1=awaitify(function(tasks,callback){var result,error=null;return eachSeries$1(tasks,(task,taskCb)=>{wrapAsync(task)((err,...args)=>{args.length<2?[result]=args:result=args,error=err,taskCb(err?null:{})})},()=>callback(error,result))});function unmemoize(fn){return(...args)=>(fn.unmemoized||fn)(...args)}var whilst$1=awaitify(function(test,iteratee,callback){callback=onlyOnce(callback);var results,_fn=wrapAsync(iteratee),_test=wrapAsync(test);function next(err,...rest){if(err)return callback(err);results=rest,!1!==err&&_test(check)}function check(err,truth){return err?callback(err):!1!==err?truth?void _fn(next):callback(null,...results):void 0}return _test(check)},3);function until(test,iteratee,callback){const _test=wrapAsync(test);return whilst$1(cb=>_test((err,truth)=>cb(err,!truth)),iteratee,callback)}var waterfall$1=awaitify(function(tasks,callback){if(callback=once(callback),!Array.isArray(tasks))return callback(new Error("First argument to waterfall must be an array of functions"));if(!tasks.length)return callback();var taskIndex=0;function nextTask(args){wrapAsync(tasks[taskIndex++])(...args,onlyOnce(next))}function next(err,...args){if(!1!==err)return err||taskIndex===tasks.length?callback(err,...args):void nextTask(args)}nextTask([])}),index={apply,applyEach:applyEach$1,applyEachSeries,asyncify,auto,autoInject,cargo,cargoQueue:cargo$1,compose,concat:concat$1,concatLimit:concatLimit$1,concatSeries:concatSeries$1,constant,detect:detect$1,detectLimit:detectLimit$1,detectSeries:detectSeries$1,dir,doUntil,doWhilst:doWhilst$1,each,eachLimit:eachLimit$2,eachOf:eachOf$1,eachOfLimit:eachOfLimit$2,eachOfSeries:eachOfSeries$1,eachSeries:eachSeries$1,ensureAsync,every:every$1,everyLimit:everyLimit$1,everySeries:everySeries$1,filter:filter$1,filterLimit:filterLimit$1,filterSeries:filterSeries$1,forever:forever$1,groupBy,groupByLimit:groupByLimit$1,groupBySeries,log,map:map$1,mapLimit:mapLimit$1,mapSeries:mapSeries$1,mapValues,mapValuesLimit:mapValuesLimit$1,mapValuesSeries,memoize,nextTick,parallel,parallelLimit,priorityQueue,queue:queue$1,race:race$1,reduce:reduce$1,reduceRight,reflect,reflectAll,reject:reject$2,rejectLimit:rejectLimit$1,rejectSeries:rejectSeries$1,retry,retryable,seq,series,setImmediate:setImmediate$1,some:some$1,someLimit:someLimit$1,someSeries:someSeries$1,sortBy:sortBy$1,timeout,times,timesLimit,timesSeries,transform,tryEach:tryEach$1,unmemoize,until,waterfall:waterfall$1,whilst:whilst$1,all:every$1,allLimit:everyLimit$1,allSeries:everySeries$1,any:some$1,anyLimit:someLimit$1,anySeries:someSeries$1,find:detect$1,findLimit:detectLimit$1,findSeries:detectSeries$1,forEach:each,forEachSeries:eachSeries$1,forEachLimit:eachLimit$2,forEachOf:eachOf$1,forEachOfSeries:eachOfSeries$1,forEachOfLimit:eachOfLimit$2,inject:reduce$1,foldl:reduce$1,foldr:reduceRight,select:filter$1,selectLimit:filterLimit$1,selectSeries:filterSeries$1,wrapSync:asyncify,during:whilst$1,doDuring:doWhilst$1};exports.default=index,exports.apply=apply,exports.applyEach=applyEach$1,exports.applyEachSeries=applyEachSeries,exports.asyncify=asyncify,exports.auto=auto,exports.autoInject=autoInject,exports.cargo=cargo,exports.cargoQueue=cargo$1,exports.compose=compose,exports.concat=concat$1,exports.concatLimit=concatLimit$1,exports.concatSeries=concatSeries$1,exports.constant=constant,exports.detect=detect$1,exports.detectLimit=detectLimit$1,exports.detectSeries=detectSeries$1,exports.dir=dir,exports.doUntil=doUntil,exports.doWhilst=doWhilst$1,exports.each=each,exports.eachLimit=eachLimit$2,exports.eachOf=eachOf$1,exports.eachOfLimit=eachOfLimit$2,exports.eachOfSeries=eachOfSeries$1,exports.eachSeries=eachSeries$1,exports.ensureAsync=ensureAsync,exports.every=every$1,exports.everyLimit=everyLimit$1,exports.everySeries=everySeries$1,exports.filter=filter$1,exports.filterLimit=filterLimit$1,exports.filterSeries=filterSeries$1,exports.forever=forever$1,exports.groupBy=groupBy,exports.groupByLimit=groupByLimit$1,exports.groupBySeries=groupBySeries,exports.log=log,exports.map=map$1,exports.mapLimit=mapLimit$1,exports.mapSeries=mapSeries$1,exports.mapValues=mapValues,exports.mapValuesLimit=mapValuesLimit$1,exports.mapValuesSeries=mapValuesSeries,exports.memoize=memoize,exports.nextTick=nextTick,exports.parallel=parallel,exports.parallelLimit=parallelLimit,exports.priorityQueue=priorityQueue,exports.queue=queue$1,exports.race=race$1,exports.reduce=reduce$1,exports.reduceRight=reduceRight,exports.reflect=reflect,exports.reflectAll=reflectAll,exports.reject=reject$2,exports.rejectLimit=rejectLimit$1,exports.rejectSeries=rejectSeries$1,exports.retry=retry,exports.retryable=retryable,exports.seq=seq,exports.series=series,exports.setImmediate=setImmediate$1,exports.some=some$1,exports.someLimit=someLimit$1,exports.someSeries=someSeries$1,exports.sortBy=sortBy$1,exports.timeout=timeout,exports.times=times,exports.timesLimit=timesLimit,exports.timesSeries=timesSeries,exports.transform=transform,exports.tryEach=tryEach$1,exports.unmemoize=unmemoize,exports.until=until,exports.waterfall=waterfall$1,exports.whilst=whilst$1,exports.all=every$1,exports.allLimit=everyLimit$1,exports.allSeries=everySeries$1,exports.any=some$1,exports.anyLimit=someLimit$1,exports.anySeries=someSeries$1,exports.find=detect$1,exports.findLimit=detectLimit$1,exports.findSeries=detectSeries$1,exports.forEach=each,exports.forEachSeries=eachSeries$1,exports.forEachLimit=eachLimit$2,exports.forEachOf=eachOf$1,exports.forEachOfSeries=eachOfSeries$1,exports.forEachOfLimit=eachOfLimit$2,exports.inject=reduce$1,exports.foldl=reduce$1,exports.foldr=reduceRight,exports.select=filter$1,exports.selectLimit=filterLimit$1,exports.selectSeries=filterSeries$1,exports.wrapSync=asyncify,exports.during=whilst$1,exports.doDuring=doWhilst$1,Object.defineProperty(exports,"__esModule",{value:!0})});